<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd">

    <!--todo mybatis整合-->
    <!--todo 1.配置数据库相关配置-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

    <!--todo 2.数据库连接池-->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc.url}"/>-->
        <!--<property name="user" value="${jdbc.userName}"/>-->
        <!--<property name="password" value="${jdbc.passWord}"/>-->
        <!--&lt;!&ndash;c3p0私有属性&ndash;&gt;-->
        <!--<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>-->
        <!--<property name="minPoolSize" value="${jdbc.minPoolSize}"/>-->
        <!--&lt;!&ndash;关闭连接后不自动COMMIT&ndash;&gt;-->
        <!--<property name="autoCommitOnClose" value="false"/>-->
        <!--<property name="checkoutTimeout" value="100000"/>-->
        <!--<property name="acquireRetryAttempts" value="2"/>-->
    <!--</bean>-->

    <!--todo 2.阿里druid数据库连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!--基本属性-->
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.userName}"/>
        <property name="password" value="${jdbc.passWord}"/>

        <!--配置初始化大小、最小、最大-->
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minPoolSize}"/>
        <property name="maxActive" value="${jdbc.maxPoolSize}"/>

        <!--配置获取连接等待超时的时间-->
        <property name="maxWait" value="60000"/>

        <!--配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位毫秒-->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!--配置一个连接在池中最小生存的时间，单位毫秒-->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!--打开PSCache, 并且指定每个连接上PSCache的大小-->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!--配置监控统计拦截的filters, 去掉后监控界面sql无法统计-->
        <property name="filters" value="stat"/>
    </bean>

    <!--todo 3.配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--扫描包，使用别名-->
        <property name="typeAliasesPackage" value="org.seckill.entity"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--todo 4.配置扫描Dao接口包，实现Dao接口，注入spring容器-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--注入sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描Dao接口包-->
        <property name="basePackage" value="org.seckill.dao"/>
    </bean>
</beans>

